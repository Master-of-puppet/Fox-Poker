// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Puppet;
using Puppet.API.Client;
using Puppet.Core.Network.Http;
using Puppet.Services;

public class LoginPresenter : ILoginPresenter
{

	ILoginView view;
	public LoginPresenter(ILoginView view){
		PuApp.Instance.StartApplication();
		SocialService.Instance.onLoginComplete += onLoginComplete;
		this.view = view;

	}
	
	public void ViewEnd(){
		SocialService.Instance.onLoginComplete += onLoginComplete;
	}

	#region ILoginPresenter implementation


	public void LoginFacebook ()
	{
		SocialService.SocialLogin(SocialType.Facebook);
	}
	#endregion

	#region ILoginPresenter implementation

	public void LoginWithUserName (string username, string password)
	{
		APILogin.GetAccessToken (username, password,GetAccessTokenCallBack);
	}

	public void GetAccessTokenWithSocial (string accessToken)
	{
		APILogin.GetAccessTokenFacebook (accessToken, OnGetAccessTokenWithFacebookCallBack);
	}

	public void LoginWithAccessToken (string accessToken)
	{
		APILogin.Login (accessToken, LoginCallBack);
	}

	void OnGetAccessTokenWithFacebookCallBack (bool status, string message, System.Collections.Generic.Dictionary<string, object> data)
	{

	}

	#endregion

	void GetAccessTokenCallBack (bool status, string message, IHttpResponse data)
	{
		if (status) {
			LoginWithAccessToken (message);
		} else {
			view.ShowLoginError(message);
		}
	}
	
	void LoginCallBack (bool status, string message)
	{
		if (!status)
			view.ShowLoginError (message);
	}

	void onLoginComplete (SocialType arg1, bool arg2)
	{
			if(arg2){
				GetAccessTokenWithSocial(SocialService.GetSocialNetwork(arg1).AccessToken);
	        }
	}
}


