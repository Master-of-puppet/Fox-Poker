// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Puppet.Service;
using System.Collections.Generic;
using UnityEngine;
using Puppet;
using Puppet.API.Client;

[PrefabAttribute(Name = "Prefabs/Dialog/DialogCreateGame", Depth = 7, IsAttachedToCamera = true, IsUIPanel = true)]
public class DialogCreateGameView : BaseDialog<DialogCreateGame,DialogCreateGameView>
{
		#region UnityEditor
		public UISlider moneySlide;
		public GameObject btnMinus,btnPlus,btnCreateGame,btnNumberPlayer;
		public UILabel lbMoney;
        double currentBetting;
		#endregion
		protected override void OnEnable ()
		{
			UIEventListener.Get (btnMinus).onClick += OnClickBtnMinus;
			UIEventListener.Get (btnPlus).onClick += OnClickBtnPlus;
			UIEventListener.Get (btnCreateGame).onClick += OnClickBtnCreateGame;
			UIEventListener.Get (btnNumberPlayer).onClick += OnClickBtnNumberPlayer;
			EventDelegate.Add (moneySlide.onChange, OnSliderChangeValue);
			base.OnEnable ();

		}
		protected override void OnDisable ()
		{
			UIEventListener.Get (btnMinus).onClick -= OnClickBtnMinus;
			UIEventListener.Get (btnPlus).onClick -= OnClickBtnPlus;
			UIEventListener.Get (btnCreateGame).onClick -= OnClickBtnCreateGame;
			UIEventListener.Get (btnNumberPlayer).onClick -= OnClickBtnNumberPlayer;
			EventDelegate.Remove (moneySlide.onChange, OnSliderChangeValue);
			base.OnDisable ();

		}
		public override void ShowDialog (DialogCreateGame data)
		{
			base.ShowDialog (data);
			initData (data);

		}
	void initData (DialogCreateGame data)
	{
		moneySlide.numberOfSteps = data.bettingsArrs.Count ;
		lbMoney.text = "0";
	}

	void OnClickBtnMinus (GameObject go)
	{
		moneySlide.value -= 1 / (float)data.bettingsArrs.Count;
	}

	void OnClickBtnPlus (GameObject go)
	{

		moneySlide.value += 1 / (float)data.bettingsArrs.Count;
	}

	void OnClickBtnCreateGame (GameObject go)
	{
		APILobby.CreateLobby(currentBetting, data.numberPlayer, OnCreateLobbyCallBack);
	}

	void OnClickBtnNumberPlayer (GameObject go)
	{
		if (data.numberPlayer == 9) {
			data.numberPlayer = 5;
		} else {
			data.numberPlayer = 9;
		}
		go.GetComponentInChildren<UILabel> ().text = data.numberPlayer + " Người";
	}
	void OnSliderChangeValue(){
		int index = (int) Mathf.Lerp (1, moneySlide.numberOfSteps,moneySlide.value);
		currentBetting = data.bettingsArrs [index - 1];
		string[] moneyAndShortcut = Utility.Convert.ConvertMoneyAndShortCut (data.bettingsArrs [index - 1]);
		lbMoney.text = "$ " + currentBetting/2 + "/"+currentBetting;
		lbMoney.transform.parent.GetComponent<UISprite> ().width = lbMoney.width + 50;
	}

	void OnCreateLobbyCallBack (bool status, string message)
	{
		if (!status)
			DialogService.Instance.ShowDialog (new DialogMessage ("Lỗi",message,null));	
		GameObject.Destroy (gameObject);
	}
}
public class DialogCreateGame : AbstractDialogData{
    public List<double> bettingsArrs;
	public int numberPlayer = 9;
    public DialogCreateGame(List<double> arrs)
        : base()
    {
		this.bettingsArrs = arrs;
	}
	public override void ShowDialog ()
	{
		DialogCreateGameView.Instance.ShowDialog (this);
	}
}

