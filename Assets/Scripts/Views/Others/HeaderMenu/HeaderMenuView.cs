// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using Puppet;
using UnityEngine;

[PrefabAttribute(Name = "Prefabs/GameManager/HeaderMenu", Depth = 3, IsAttachedToCamera = true, IsUIPanel = true)]
public class HeaderMenuView : SingletonPrefab<HeaderMenuView>,IHeaderMenuView
{

	#region Unity Editor
	public UITable tableButton;
	public GameObject btnBack, btnCommon, btnRecharge, btnMessage,btnLeague , btnSettings, btnLobbyChangeTypeShow, btnSearch;
	public GameObject logoInLobby;
	public UITexture avatar;
	public UILabel lbUserName,lbChip,lbLevel;
	public UISlider slideLevel;
	#endregion


	public  HeaderMenuPresenter presenter;
	public void ShowInWorldGame(){
		btnCommon.SetActive (true);
		btnRecharge.SetActive (true);
		btnMessage.SetActive (true);
		btnSettings.SetActive (true);
		btnBack.SetActive (false);
		btnLobbyChangeTypeShow.SetActive (false);
		btnLeague.SetActive (false);
		btnSearch.SetActive (false);
		tableButton.Reposition ();
		slideLevel.transform.parent.parent.gameObject.SetActive (true);
		avatar.transform.parent.gameObject.SetActive (true);
	}

	public void ShowInPlaza(){
		btnCommon.SetActive (true);
		btnBack.SetActive (true);
		btnRecharge.SetActive (true);
		btnMessage.SetActive (true);
		btnSettings.SetActive (true);
		btnLeague.SetActive (true);

		btnLobbyChangeTypeShow.SetActive (false);
		btnSearch.SetActive (false);
		tableButton.Reposition ();
	
	}
	public void ShowInLobby(){
		btnLobbyChangeTypeShow.SetActive (true);
		btnSearch.SetActive (true);
		btnBack.SetActive (true);
		logoInLobby.SetActive (true);

		btnCommon.SetActive (false);
		btnRecharge.SetActive (false);
		btnMessage.SetActive (false);
		btnSettings.SetActive (false);
		btnLeague.SetActive (false);
		tableButton.Reposition ();
	}
	public void ShowInGameplay(){
		btnSearch.SetActive (true);
		btnRecharge.SetActive (true);
		btnBack.SetActive (true);
		btnLobbyChangeTypeShow.SetActive (false);
		btnCommon.SetActive (false);
		btnMessage.SetActive (false);
		btnSettings.SetActive (false);
		btnLeague.SetActive (false);
		tableButton.Reposition ();
	}
	void Start(){
		presenter = new HeaderMenuPresenter (this);
		presenter.ViewStart ();
		UIPanel panel = gameObject.GetComponent<UIPanel> ();
		panel.SetAnchor( NGUITools.GetRoot (gameObject));
	}
	void OnDestroy(){
		presenter.ViewEnd();
	}
	public void SetChangeTypeLobbyCallBack(Action callback){
		presenter.OnShowLobbyRowTypeCallBack = callback;
	}
	void OnEnable(){
		UIEventListener.Get (btnBack).onClick += OnBackClickCallBack;
		UIEventListener.Get (btnCommon).onClick += OnCommonClickCallBack;
		UIEventListener.Get (btnRecharge).onClick += OnRechargeClickCallBack;
		UIEventListener.Get (btnMessage).onClick += OnMessageClickCallBack;
		UIEventListener.Get (btnSettings).onClick += OnSettingsClickCallBack;
		UIEventListener.Get (btnLobbyChangeTypeShow).onClick += OnLobbyChangeTypeClickCallBack;
		UIEventListener.Get (btnSearch).onClick += OnSearchClickCallBack;
		UIEventListener.Get (btnLeague).onClick += OnLeagueClickCallBack;

	}
	void OnDisable(){
		UIEventListener.Get (btnBack).onClick -= OnBackClickCallBack;
		UIEventListener.Get (btnCommon).onClick -= OnCommonClickCallBack;
		UIEventListener.Get (btnRecharge).onClick -= OnRechargeClickCallBack;
		UIEventListener.Get (btnMessage).onClick -= OnMessageClickCallBack;
		UIEventListener.Get (btnSettings).onClick -= OnSettingsClickCallBack;
		UIEventListener.Get (btnLobbyChangeTypeShow).onClick -= OnLobbyChangeTypeClickCallBack;
		UIEventListener.Get (btnSearch).onClick -= OnSearchClickCallBack;
		UIEventListener.Get (btnLeague).onClick -= OnLeagueClickCallBack;

	}
	#region IHeaderMenuView implementation
	public void ShowUserName (string username)
	{
		lbUserName.text = username;
	}

	public void ShowChip (string chip)
	{
		lbChip.text = chip;
	}

	public void ShowLevel (string level)
	{
		if (lbLevel.gameObject.activeSelf)
			lbLevel.text = level;
	}

	public void ShowExp (float currentExp)
	{
		if (slideLevel.gameObject.activeSelf)
			slideLevel.value = currentExp;
	}
	
	
	public void ShowError (string message)
	{
		throw new NotImplementedException ();
	}
	
	
	public void ShowConfirm (string message, Action<bool?> action)
	{
		throw new NotImplementedException ();
	}
	#endregion


	void OnBackClickCallBack (GameObject go)
	{

		presenter.OnBackPressed ();	
	}

	void OnCommonClickCallBack (GameObject go)
	{
		throw new NotImplementedException ();
	}

	void OnRechargeClickCallBack (GameObject go)
	{
		throw new NotImplementedException ();
	}

	void OnMessageClickCallBack (GameObject go)
	{
		throw new NotImplementedException ();
	}

	void OnSettingsClickCallBack (GameObject go)
	{
		throw new NotImplementedException ();
	}

	void OnLobbyChangeTypeClickCallBack (GameObject go)
	{
		if (go.transform.GetChild (0).GetComponent<UISprite> ().spriteName == "icon_menu") 
		{
			go.transform.GetChild (0).GetComponent<UISprite> ().spriteName = "icon_menu_type_2";
		}
		else {
			go.transform.GetChild (0).GetComponent<UISprite> ().spriteName = "icon_menu";
		}
		presenter.ShowLobbyType ();
	}

	void OnSearchClickCallBack (GameObject go)
	{
	}

	void OnLeagueClickCallBack (GameObject go)
	{
	}
}


